---
import navItems from "../data/nav.json";
import Icon from "./Icon.astro";
const currentPath = Astro.url.pathname;

function isActive(href: string): boolean {
  return currentPath === href;
}

const icons = ['menu', 'more-horizontal', 'align-justify', 'list', 'grip-horizontal', 'grid-3x3', 'menu', 'align-left', 'more-vertical', 'layout-grid'];
const randomIcon = icons[Math.floor(Math.random() * icons.length)];
---

<header class="glass-light border-b border-primary-200/30 sticky top-0 z-50 px-6 py-4">
  <div class="max-w-7xl mx-auto flex justify-between items-center">
    <a href="/" class="text-2xl font-bold tracking-tight gradient-text hover:holographic transition-all duration-300">
      AstroPraxis
    </a>

    <!-- Desktop Nav -->
    <nav class="hidden md:flex space-x-8 text-sm items-center relative">
      {navItems.map(item => item.children ? (
        <div class="group relative">
          <button class="font-semibold text-neutral-700 hover:gradient-text transition-all duration-300 py-2 px-4 rounded-xl hover:glass-light flex items-center">
            {item.label}
            <Icon name="chevron-down" size={12} class="ml-1 transition-transform group-hover:rotate-180" />
          </button>
          <div class="absolute left-0 mt-2 hidden group-hover:block hover:block bg-white shadow-xl rounded-xl border border-neutral-200 z-20 min-w-48">
            <ul class="py-3 px-2 space-y-1">
              {item.children.map(child => (
                <li>
                  <a
                    href={child.href}
                    target={child.external ? "_blank" : "_self"}
                    rel={child.external ? "noopener noreferrer" : ""}
                    class={`block px-3 py-2 rounded-lg text-neutral-700 hover:bg-primary-50 hover:text-primary-700 transition-colors flex items-center justify-between ${isActive(child.href) ? "bg-primary-100 text-primary-700 font-semibold" : ""}`}
                  >
                    <span>{child.label}</span>
                    {child.external && (
                      <Icon name="external-link" size={12} class="ml-1" />
                    )}
                  </a>
                </li>
              ))}
            </ul>
          </div>
        </div>
      ) : (
        <a
          href={item.href}
          class={`font-semibold py-2 px-3 rounded-lg transition-colors ${isActive(item.href) ? "bg-primary-100 text-primary-700" : "text-neutral-700 hover:text-primary-600 hover:bg-neutral-50"}`}
        >
          {item.label}
        </a>
      ))}
    </nav>

    <!-- Mobile Toggle -->
    <button
      id="menu-toggle"
      class="md:hidden text-neutral-700 focus:outline-none focus:ring-2 focus:ring-primary-500 p-2 rounded-lg glass-card magnetic-hover transition-all duration-300"
      aria-label="Toggle menu"
    >
      <Icon name="menu" size={24} class="" />
    </button>
  </div>

  <!-- Mobile Menu -->
  <div id="mobile-menu" class="md:hidden hidden px-6 pt-4 pb-6 space-y-3 animate-fade-in bg-white border-t border-neutral-200">
    {navItems.map(item => item.children ? (
      <details class="group">
        <summary class="text-neutral-800 font-semibold cursor-pointer py-2 px-3 rounded-lg hover:bg-neutral-50 transition-colors flex items-center">
          {item.label}
          <Icon name="chevron-down" size={12} class="ml-1 transition-transform group-open:rotate-180" />
        </summary>
        <ul class="space-y-2 pl-4 pt-2">
          {item.children.map(child => (
            <li>
              <a
                href={child.href}
                target={child.external ? "_blank" : "_self"}
                rel={child.external ? "noopener noreferrer" : ""}
                class={`block py-2 px-3 rounded-lg transition-colors flex items-center justify-between ${isActive(child.href) ? "bg-primary-100 text-primary-700 font-semibold" : "text-neutral-600 hover:text-primary-600 hover:bg-neutral-50"}`}
              >
                <span>{child.label}</span>
                {child.external && (
                  <Icon name="external-link" size={12} class="ml-1" />
                )}
              </a>
            </li>
          ))}
        </ul>
      </details>
    ) : (
      <a
        href={item.href}
        class={`block py-2 px-3 rounded-lg transition-colors ${isActive(item.href) ? "bg-primary-100 text-primary-700 font-semibold" : "text-neutral-800 hover:text-primary-600 hover:bg-neutral-50"}`}
      >
        {item.label}
      </a>
    ))}
  </div>
</header>

<script type="text/javascript" is:inline>
  document.addEventListener('DOMContentLoaded', () => {
    const toggle = document.getElementById('menu-toggle');
    const menu = document.getElementById('mobile-menu');

    if (toggle && menu) {
      toggle.addEventListener('click', () => {
        menu.classList.toggle('hidden');
      });
    }
  });
</script>
